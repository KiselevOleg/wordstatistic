#version: '3.9'

networks:
    overlay:

volumes:
    pg_data:

services:
    traefik:
        image: traefik:v3.0
        container_name: traefik
        restart: unless-stopped
        command:
            #- --log.level=DEBUG
            - --api.insecure=true
            - --providers.docker=true
            - --providers.docker.exposedbydefault=false
            - --entryPoints.statistic.address=:80
            - --entryPoints.admin.address=:15432
        ports:
            - 80:80
            - 8080:8080
            - 15432:15432
        networks:
            - overlay
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro

    user:
        image: wordstatistic_user:1.0.0
        container_name: user
        restart: unless-stopped
        networks:
            - overlay
        labels:
            - traefik.enable=true
            - traefik.http.routers.globalstatistic.rule=Host(`user.localhost`)
            - traefik.http.routers.globalstatistic.entrypoints=statistic
    user-postgres:
        image: postgres:15
        container_name: user-postgres
        restart: unless-stopped
        environment:
            - POSTGRES_DB=user
            - POSTGRES_USER=user
            - POSTGRES_PASSWORD=password
        networks:
            - overlay
        volumes:
            - ./postgres_data/user_data:/var/lib/postgresql/data
    globalstatistic:
        image: wordstatistic_globalstatistic:1.0.0
        container_name: globalstatistic
        restart: unless-stopped
        networks:
            - overlay
        labels:
            - traefik.enable=true
            - traefik.http.routers.globalstatistic.rule=Host(`globalstatistic.localhost`)
            - traefik.http.routers.globalstatistic.entrypoints=statistic
    globalstatistic-postgres:
        image: postgres:15
        container_name: globalstatistic-postgres
        restart: unless-stopped
        environment:
            - POSTGRES_DB=globalstatistic
            - POSTGRES_USER=globalstatistic
            - POSTGRES_PASSWORD=password
        networks:
            - overlay
        volumes:
            - ./postgres_data/globalstatistic_data:/var/lib/postgresql/data

    localstatistic:
        image: wordstatistic_localstatistic:1.0.0
        container_name: localstatistic
        restart: unless-stopped
        networks:
            - overlay
        labels:
            - traefik.enable=true
            - traefik.http.routers.localstatistic.rule=Host(`localstatistic.localhost`)
            - traefik.http.routers.localstatistic.entrypoints=statistic
    localstatistic-postgres:
        image: postgres:15
        container_name: localstatistic-postgres
        restart: unless-stopped
        environment:
            - POSTGRES_DB=localstatistic
            - POSTGRES_USER=localstatistic
            - POSTGRES_PASSWORD=password
        networks:
            - overlay
        volumes:
            - ./postgres_data/localstatistic_data:/var/lib/postgresql/data

    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        container_name: zookeeper
        restart: unless-stopped
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        #ports:
        #    - '2181:2181'
        networks:
            - overlay
    kafka:
        image: confluentinc/cp-kafka:latest
        container_name: kafka
        restart: unless-stopped
        depends_on:
            - zookeeper
        #ports:
        #     - '9092:9092'
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        networks:
            - overlay
    kafka-ui:
        image: provectuslabs/kafka-ui:latest
        container_name: kafka-ui
        restart: unless-stopped
        #ports:
        #    - "8080:8080"
        environment:
            DYNAMIC_CONFIG_ENABLED: true
        networks:
            - overlay
        labels:
            - traefik.enable=true
            - traefik.http.routers.kafkaui.rule=Host(`kafkaui.localhost`)
            - traefik.http.routers.kafkaui.entrypoints=admin
            - traefik.http.routers.kafkaui.middlewares=admin-auth
        depends_on:
            - zookeeper

    pgadmin:
        image: dpage/pgadmin4:latest
        container_name: pgadmin
        restart: unless-stopped
        environment:
            - PGADMIN_DEFAULT_EMAIL=haart@admin.com
            - PGADMIN_DEFAULT_PASSWORD=test
        networks:
            - overlay
        labels:
            - traefik.enable=true
            - traefik.http.routers.pgadmin.rule=Host(`pgadmin.localhost`)
            - traefik.http.routers.pgadmin.entrypoints=admin
            - traefik.http.routers.pgadmin.middlewares=admin-auth
            #haart test
            - 'traefik.http.middlewares.admin-auth.basicauth.users=haart:$$2a$$12$$SUDmkLybXr3LQVCoHfmo4.bao6PIZe1R8vESkiCBAqbbNZ2jAdQkm'
